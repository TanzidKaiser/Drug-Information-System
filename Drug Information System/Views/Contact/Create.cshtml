@model Drug_Information_System.Models.MessageInfo

@{
    ViewBag.Title = "Create";
    dynamic message = ViewBag.message;
}

<div style="margin-top: 30px; text-align: center" class="">
    <h2>Contact With Us</h2>
    <hr>
</div>
<div class="content">
    <p>
        <strong>Note : </strong> Drugsbooks.com is not an online pharmacy and does not supply
        any prescription medicines or over-the-counter pharmacy products.
    </p>
    <p>
        <strong>Important : </strong> Drugsbooks.com does NOT provide medical advice, diagnostic
        services or treatment recommendations. Consult with your healthcare provider.
    </p>
    <p>
        If you are experiencing difficulties with our site, please let us know by completing the form below. We apologize for 
        any inconvenience you may be experiencing and will try to resolve any issues as quickly as possible.
    </p>
</div>
<hr>
<div style="padding-left: 200px">

    @if (!message.Equals("Send Message Successfully"))
    {
        <label style="color: red">
            @message
        </label>
    }
    else
    {
        <label style="color: blue">
            @message
        </label>
    }

</div>

<div class="content">
    

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(model => model.Subject, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Subject, new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Subject)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Message, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextAreaFor(model => model.Message, new { @class = "form-control", cols = 100, @rows = 5 })
                    @Html.ValidationMessageFor(model => model.Message)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Send Message" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>



